{"version":3,"sources":["index.js"],"names":["Square","props","className","id","onClick","value","Board","i","this","squares","boardSquares","row","boardRow","col","push","renderSquare","React","Component","Game","state","history","Array","fill","position","stepNumber","xIsNext","order","slice","length","a","document","getElementsByClassName","calculateWinner","style","fontWeight","x","y","parseInt","setState","concat","step","buttons","getElementById","orderCopy","ol","childNodes","appendChild","status","current","winner","moves","map","move","desc","jumpTo","nextAvailable","includes","handleClick","changeOrder","lines","winnerLine","b","c","ReactDOM","render"],"mappings":"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","file":"static/js/main.16ae5983.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nfunction Square(props) {\n  return (\n    <button className=\"square\" id={props.id} onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n}\nclass Board extends React.Component {\n  renderSquare(i) {\n    return (\n      <Square\n        id={\"square\" + i}\n        value={this.props.squares[i]}\n        onClick={() => this.props.onClick(i)}\n      />\n    );\n  }\n\n  render() {\n    let boardSquares = [];\n    for (let row = 0; row < 3; row++) {\n      let boardRow = [];\n      for (let col = 0; col < 3; col++) {\n        boardRow.push(\n          <span key={row * 3 + col}>{this.renderSquare(row * 3 + col)}</span>\n        );\n      }\n      boardSquares.push(\n        <div className=\"board-row\" key={row}>\n          {boardRow}\n        </div>\n      );\n    }\n\n    return <div>{boardSquares}</div>;\n  }\n}\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [\n        {\n          squares: Array(9).fill(null),\n          position: null,\n        },\n      ],\n      stepNumber: 0,\n      xIsNext: true,\n      order: \"Chang order to descending\",\n    };\n  }\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    const a = document.getElementsByClassName(\"button\");\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    if (a) {\n      for (let i = 0; i < a.length; i++) {\n        a[i].style.fontWeight = \"500\";\n      }\n    }\n    let x = 0;\n    let y = 0;\n    if (i > 2) {\n      x = (i % 3) + 1;\n      y = parseInt(i / 3) + 1;\n    } else {\n      x = i + 1;\n      y = 1;\n    }\n    const position = [x, y];\n\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n    this.setState({\n      history: history.concat([\n        {\n          squares: squares,\n          position: position,\n        },\n      ]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext,\n    });\n  }\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0,\n    });\n\n    const buttons = document.getElementsByClassName(\"button\");\n    for (let i = 0; i < buttons.length; i++) {\n      buttons[i].style.fontWeight = \"500\";\n    }\n    for (let i = 0; i < 9; i++) {\n      document.getElementById(\"square\" + [i]).style = null;\n    }\n    document.getElementById(step).style.fontWeight = \"900\";\n  }\n  changeOrder() {\n    // after click, if order is ascending change to descending\n    // vice versa\n    const orderCopy =\n      this.state.order === \"Change order to ascending\"\n        ? \"Chang order to descending\"\n        : \"Change order to ascending\";\n    this.setState({\n      order: orderCopy,\n    });\n    var ol = document.getElementById(\"ol\");\n\n    var i = ol.childNodes.length;\n    while (i--) {\n      ol.appendChild(ol.childNodes[i]);\n    }\n  }\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    const moves = history.map((step, move) => {\n      const position = history[move].position;\n      const desc = move\n        ? \"Go to move #\" + move + \" position at \" + position\n        : \"Go to game start\";\n      return (\n        <li key={move}>\n          <button\n            style={{ fontWeight: 900 }}\n            className=\"button\"\n            id={move}\n            onClick={() => this.jumpTo(move)}\n          >\n            {desc}\n          </button>\n        </li>\n      );\n    });\n    const nextAvailable = () => {\n      return current.squares.includes(null);\n    };\n    nextAvailable();\n\n    let status;\n    if (winner) {\n      for (let i = 0; i < winner[1].length; i++) {\n        document.getElementById(\"square\" + winner[1][i]).style =\n          \"background: #2980B9;background: -webkit-linear-gradient(to right, #FFFFFF, #6DD5FA, #2980B9);background: linear-gradient(to right, #FFFFFF, #6DD5FA, #2980B9) \";\n      }\n      status = \"Winner: \" + winner[0];\n    } else if (nextAvailable()) {\n      status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\n    } else {\n      status = \"Tie !\";\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            squares={current.squares}\n            onClick={(i) => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <button onClick={() => this.changeOrder()}>{this.state.order}</button>\n          <div>{status}</div>\n          <ol id=\"ol\">{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(<Game />, document.getElementById(\"root\"));\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  let winnerLine = [];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      winnerLine = lines[i];\n      return [squares[a], winnerLine];\n    }\n  }\n  return null;\n}\n"],"sourceRoot":""}